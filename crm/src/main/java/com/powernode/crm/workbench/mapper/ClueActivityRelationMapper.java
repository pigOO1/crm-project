package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.domain.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    int insert(ClueActivityRelation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    int insertSelective(ClueActivityRelation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    int updateByPrimaryKeySelective(ClueActivityRelation row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbg.generated Thu Sep 14 21:54:13 CST 2023
     */
    int updateByPrimaryKey(ClueActivityRelation row);

    /**
     * 批量保存线索市场活动对象
     * @param list
     * @return
     */
    int insertClueActivityRelationByList(List<ClueActivityRelation> list);

    /**
     * 根据实体类的clueId和activityId删除
     * @param relation
     * @return
     */
    int deleteClueActivityRelationById(ClueActivityRelation relation);

    /**
     * 根据clueId查询关系信息
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    /**
     * 删除该线索下的所有的市场活动关联关系
     * @param clueId
     * @return
     */
    int deleteAllClueActivityRelationByClueId(String clueId);
}